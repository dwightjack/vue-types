version: 2.1
executors:
  node:
    working_directory: ~/repo
    docker:
      - image: cimg/node:14.17.4

jobs:
  install:
    executor: node
    steps:
      - checkout
      - restore_cache:
          keys:
            - npm-cache-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
            - npm-cache-{{ arch }}-{{ .Branch }}
            - npm-cache
      - run:
          name: Setup Dependencies
          command: npm ci
      - save_cache:
          key: npm-cache-{{ arch }}-{{ .Branch }}-{{ checksum "package-lock.json" }}
          paths:
            - node_modules
      - persist_to_workspace:
          root: ~/repo
          paths:
            - .
  build:
    executor: node
    steps:
      - checkout
      - attach_workspace:
          at: ~/repo
      - run:
          name: Build
          command: npm run build

  test:
    executor: node
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: ESLint
          command: npm run lint
      - run:
          name: Setup Code Climate test-reporter
          command: |
            curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
            chmod +x ./cc-test-reporter
      - run:
          name: Run Tests
          command: |
            ./cc-test-reporter before-build
            npm test
            ./cc-test-reporter after-build -t lcov
      - store_artifacts: # upload test coverage as artifact
          path: ./coverage/lcov.info
          prefix: tests

  docs:
    executor: node
    steps:
      - attach_workspace:
          at: ~/repo
      - run:
          name: Generate Documentation
          command: npm run docs:build
      - run:
          name: Documentation deploy setup
          command: |
            git config user.email "$GH_EMAIL"
            git config user.name "$GH_NAME"
            mkdir ~/.ssh/ && echo -e "Host github.com\n\tStrictHostKeyChecking no\n" > ~/.ssh/config
      - add_ssh_keys:
          fingerprints:
            - 'a8:04:82:83:42:dc:d3:5c:ad:39:27:54:22:59:18:ed'
      - run:
          name: Deploy documentation to gh-pages branch
          command: npx gh-pages --dotfiles --message "[skip ci] Documentation for $CIRCLE_SHA1" --dist docs/.vuepress/dist

workflows:
  version: 2
  build_and_test:
    jobs:
      - install
      - test:
          requires:
            - install
      - build:
          requires:
            - install
      - docs:
          requires:
            - install
          filters:
            branches:
              only: main
